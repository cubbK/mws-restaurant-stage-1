class DBHelper{static get DATABASE_URL(){const port=1337;return`http://localhost:${port}/restaurants`}static async fetchRestaurants(){const restaurants=await fetch(DBHelper.DATABASE_URL);const json=await restaurants.json();return json}static async fetchRestaurantById(id){const restaurants=await DBHelper.fetchRestaurants();const restaurant=restaurants.find(r=>r.id==id);return restaurant}static async fetchReviewsByRestaurantId(id){const allReviews=await DBHelper.fetchReviews();const reviews=allReviews.filter(review=>review.restaurant_id=id);return reviews}static async fetchReviews(){const reviews=await fetch(`http://localhost:1337/reviews/`);const reviewsData=await reviews.json();return reviewsData}static fetchRestaurantByCuisine(cuisine,callback){DBHelper.fetchRestaurants((error,restaurants)=>{if(error){callback(error,null)}else{const results=restaurants.filter(r=>r.cuisine_type==cuisine);callback(null,results)}})}static fetchRestaurantByNeighborhood(neighborhood,callback){DBHelper.fetchRestaurants((error,restaurants)=>{if(error){callback(error,null)}else{const results=restaurants.filter(r=>r.neighborhood==neighborhood);callback(null,results)}})}static fetchRestaurantByCuisineAndNeighborhood(cuisine,neighborhood,callback){DBHelper.fetchRestaurants((error,restaurants)=>{if(error){callback(error,null)}else{let results=restaurants;if(cuisine!="all"){results=results.filter(r=>r.cuisine_type==cuisine)}if(neighborhood!="all"){results=results.filter(r=>r.neighborhood==neighborhood)}callback(null,results)}})}static fetchNeighborhoods(callback){DBHelper.fetchRestaurants((error,restaurants)=>{if(error){callback(error,null)}else{const neighborhoods=restaurants.map((v,i)=>restaurants[i].neighborhood);const uniqueNeighborhoods=neighborhoods.filter((v,i)=>neighborhoods.indexOf(v)==i);callback(null,uniqueNeighborhoods)}})}static fetchCuisines(callback){DBHelper.fetchRestaurants((error,restaurants)=>{if(error){callback(error,null)}else{const cuisines=restaurants.map((v,i)=>restaurants[i].cuisine_type);const uniqueCuisines=cuisines.filter((v,i)=>cuisines.indexOf(v)==i);callback(null,uniqueCuisines)}})}static urlForRestaurant(restaurant){return`./restaurant.html?id=${restaurant.id}`}static imageUrlForRestaurant(restaurant,size){return size?`/img/${size}/${restaurant.photograph}.jpg`:`/img/webp/${restaurant.photograph}.webp`}static mapMarkerForRestaurant(restaurant,map){const marker=new google.maps.Marker({position:restaurant.latlng,title:restaurant.name,url:DBHelper.urlForRestaurant(restaurant),map:map,animation:google.maps.Animation.DROP});return marker}}